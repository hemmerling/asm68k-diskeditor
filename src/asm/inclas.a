* * FILE: "sINCLAS" ** Copyright 1988-2015 Rolf Hemmerling** Licensed under the Apache License, Version 2.0 (the "License");* you may not use this file except in compliance with the License.* You may obtain a copy of the License at** http://www.apache.org/licenses/LICENSE-2.0** Unless required by applicable law or agreed to in writing,* software distributed under the License is distributed on an* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,* either express or implied.* See the License for the specific language governing permissions* and limitations under the License.** Haupt-Entwicklungszeit: 1988 - 1988-05-09 * * * SYSTEM TRAPS * ACT        OPD     $A014       ;ACTIVATE TASK BY NAME ACTEV      OPD     $A01A       ;ACTIVATE BY INTERRUPT-SCHEDULE ACTQ       OPD     $4E40       ;ACTIVATE QUICK *(NO TRAP) JUMTBL     EQU     $08F4       ;CONVERT D7 TO ASCII-STRING CD7TAS     EQU     $6 * CACHCL     OPD     $A05C       ;CLEAR CACHE TRAP *V2.1* CLKSC      OPD     $A068       ;CLOCK TO ASCII CONVERSION *V2.1* CON        OPD     $4E42       ;CONTINUE CONEV      OPD     $A01C       ;CONTINUE BY INTERRUPT-SCHEDULE CONQ       OPD     $A050       ;CONTINUE QUICK CSA        OPD     $A03A       ;CHARACTER-SCAN ALTERNATE DATASC     OPD     $A066       ;DATE TO ASCII CONVERSION DELTST     OPD     $A052       ;DELIMITER-TEST DISAB      OPD     $A034       ;DISABLE PROZESSINTERRUPT DVDSC      OPD     $A012       ;DEVICE-DESCRIPTION-LINK ENAB       OPD     $A032       ;ENABLE PROZESSINTERRUPT ERROR      OPD     $A002       ;WRITE ERROR-MESSAGE EVACTQ     OPD     $A056       ;INTERRUPT-SCHEDULE ACTIVATION QUICK EVCONQ     OPD     $A05A       ;EVENT CONTINUE QUICK FETCE      OPD     $4E48       ;FETCH COMMUNICATION-ELEMENT GAPST      OPD     $A00E       ;GENERATE AND PREPARE SUBTASK IMBS       OPD     $A03C       ;IDENTIFY MODULE BY STRING INTD1      OPD     $A04C       ;INTEGER TO D1 IOWA       OPD     $A00A       ;I/O WAIT FUNCTION ITBO       OPD     $A006       ;IDENTIFY TASK BY OPNAME ITBS       OPD     $A048       ;IDENTIFY TASK BY STRING ITS1T      OPD     $A040       ;INDEX-TEST ONE-DIMENSION ITS1TL     OPD     $A060       ;LONG INDEX-TEST ONE-DIMENSION ITS2T      OPD     $A042       ;INDEX-TEST TWO-DIMENSION ITS2TL     OPD     $A042       ;LONG INDEX-TEST TWO-DIMENSION ITS3T      OPD     $A044       ;INDEX-TEST THREE-DIMENSION ITS3TL     OPD     $A044       ;LONG INDEX-TEST THREE-DIMENSION LIMR       OPD     $A036       ;LINE TRACER (OPD DES COMPILERS) LITRA      OPD     $A036       ;LINE TRACER LITRAV     OPD     $A038       ;LINE TRACER VIRTUELL MD2B60     OPD     $A046       ;MULTIPLY D2 BY 60 OFF        OPD     $4E4F       ;SWITCH DISPATCHER OFF + SUPERVISORMODE PENTR      OPD     $4E4B       ;PROCEDURE ENTRY PIT        OPD     $A02E       ;PERIPHERIE-INPUT *V2.1* POT        OPD     $A030       ;PERIPHERIE-OUTPUT *V2.1* PREV       OPD     $A022       ;PREVENT BY NAME PREVQ      OPD     $A054       ;PREVENT QUICK QDPC       OPD     $4E43       ;DISPATCHER CALL QSA        OPD     $A01E       ;QUOTE-SCAN WITH ANSWER RCLK       OPD     $A03E       ;READ-CLOCK RELCE      OPD     $4E49       ;RELEASE CE RELEA      OPD     $4E47       ;RELEASE SEMAPHORE REQU       OPD     $4E46       ;REQUEST SEMAPHORE RETN       OPD     $4E4C       ;RETURN FROM PROCEDURE RUBEL      OPD     $A020       ;RUBBER BLANKS RWSP       OPD     $A02A       ;RELEASE WORKSPACE SCAN       OPD     $4E45       ;SCANNER TRAP STBCLK     OPD     $A05E       ;SET BATTERY CLOCK SUSP       OPD     $A028       ;SUSPEND ACTUAL RUNNING TASK TERME      OPD     $A000       ;TERMINATE EXTERNAL TERMEQ     OPD     $A058       ;TERMINATE QUICK TERMI      OPD     $4E41       ;TERMINATE INTERNAL TERMV      OPD     $A010       ;TERMINATE AND VANISH TIAC       OPD     $A016       ;TIME-SCHEDULE ACTIVATION TIACQ      OPD     $A024       ;TIME-SCHEDULE ACTIVATION QUICK TICON      OPD     $A018       ;CONTINUE BY TIME-SCHEDULE TICONQ     OPD     $A04E       ;TIME CONTINUE QUICK TIRE       OPD     $A02C       ;TIME RESUME TOQ        OPD     $4E4D       ;TAKE OF QUEUE TOV        OPD     $4E4E       ;## HYPERPROCESSOR ON TRIGEV     OPD     $A026       ;TRIGGER EVENT WSBS       OPD     $A00C       ;WORKSPACE BACKWARD SEARCH WSFA       OPD     $A008       ;WORKSPACE FIXED ADDRESS REQUEST WSFS       OPD     $A004       ;WORKSPACE FORWARD SEARCH XIO        OPD     $4E4A       ;TRANSFER CE FOR INPUT/OUTPUT * * CE - AUFBAU (E-II-2) * TIDO       EQU     $15         ;.L TASK-ID OF OWNER PRIO       EQU     $1E         ;.W PLAZIERUNGSPRIO IN DER QUEUE BUADR      EQU     $20         ;.L BUFFER-ADRESS RECLEN     EQU     $24         ;.L BLOCKLAENGE IN BYTES STATIO     EQU     $26         ;.B STATUSBYTE LDNIO      EQU     $27         ;.B LDN DER WARTESCHLANGE DES CE MODE       EQU     $28         ;.W BETRIEBSART,ENDEBEDINGUNG,.. DRV        EQU     $2A         ;.W DRIVE-NO ODER ACIA-MODE FNAME      EQU     $2C         ;FILENAME ... $FF * * BEDEUTUNG DER EINZELNEN BITS IM MODE-WORD (E-III-2,3) * * 1.BYTE * MODMWA     EQU     $80         ;SUSPEND (WAIT) UNTIL READY MODMOU     EQU     $40         ;OUTPUT-DIRECTION MODMCR     EQU     $20         ;AUTO-STOP AFTER TRANSMISSION OF CR MODMLF     EQU     $10         ;AUTO-STOP AFTER TRANSMISSION OF LF MODMEO     EQU     $08         ;AUTO-STOP AFTER TRANSMISSION OF EOF MODMSC     EQU     $04         ;SUPPRESS COMMAND-INP.(ACIA) MODMNE     EQU     $02         ;NO ECHO ON INPUT (ACIA,SCC) MODBIN     EQU     $01         ;BINAERER TRANSFER * * 2.BYTE * IOCEF      EQU     $80         ;RUECKMELDEBIT BEI EINGABE: EOF NERR       EQU     $40         ;NO ERROR MESSAGES EXCLU      EQU     $20         ;EXCLUSIV ACCESS * * BEDEUTUNG DER BITS IM STATUSBYTE STATIO * STABRE     EQU     $02         ;RTOS SOLL ODER WILL CE AUFLOESEN, *                                SOBALD E/A FERTIG IST STABFL     EQU     $08         FLAG ZUR FREIEN VERWENDUNG DES NUTZERS * * * SYSTEMKONSTANTEN (A-II-15,E-VI-2,3,4 E-VI-2,6 *                   E-VII-5,6,11,14 F-I-2,IMPL-SCHEIBE) * IRHSIV     EQU     $068        ;.L V26 HORIZONTAL-BLANK IID IRVSIV     EQU     $070        ;.L V28 VERTICAL-BLANK IID * IRMFPV     EQU     $100        ;.L V64 BASE INTERRUPT ADDRESS MFP IRPAIV     EQU     $100        ;.L V64 PARALLEL PORT IID IRDCDV     EQU     $104        ;.L V65 RS 232 DCD IID IRCTSV     EQU     $108        ;.L V66 RS 232 CTS IID IRRESV     EQU     $10C        ;.L V67 (RESERVED VECTOR) IRTMDV     EQU     $110        ;.L V68 RS 232 BAUDRATE GENERATOR,TIMER D IID IRTMCV     EQU     $114        ;.L V69 TIMER C IID IRACIV     EQU     $118        ;.L V70 ACIA IID IRDMAV     EQU     $11C        ;.L V71 FLOPPY-CONTROLLER UND DMA IID IRTMBV     EQU     $120        ;.L V72 ZEILENUECKLAUFZAEHLER,TIMER B IID IRTERV     EQU     $124        ;.L V73 RS 232 TRANSMITTER ERROR IID IRTBIV     EQU     $128        ;.L V74 TRANSMITTER BUFFER IID IRRERV     EQU     $12C        ;.L V75 TRANSMITTER ERROR IID IRRBIV     EQU     $130        ;.L V76 RECEIVE BUFFER IID IRTMAV     EQU     $134        ;.L V77 TIMER A IID IRRIIV     EQU     $138        ;.L V78 RING INDICATOR IID * IID        EQU     $7FE        ;.W INTERRUPTIDENTIFIER DPC        EQU     $800        ;.W DISPATCHER-CALL FLAG TID        EQU     $802        ;.L ACTUAL RUNNING TASK IDENT. (ADRESS) TRIGGR     EQU     $80E        ;.L ADR EINSPRUNG ANSTELLE TRAP 'TRIGEV' *                               ( IN IRQ - ROUTINEN ZU VERWENDEN ) VIDPTR     EQU     $81A        ;.L VIDEOPOINTER, HAUPTBILDSCHIRM TASTA      EQU     $81E        ;.L INHALT IST BASISADRESSE FUER TASTATUR- *                               TABELLEN *V2.1* * * INTERRUPT-BUFFER POINTER *  (SCHEIBE-1) = LEVEL * * IDP3,IDP7 SIEHE ATARI ST SPEZIFISCHE SYSTEMADRESSEN * (HDSCRN,CHSCRN) *                               ATARI ST V2.0: IDP1       EQU     $832        ;.L $00000A66 IDP2       EQU     $836        ;.L $000EA65E IDP3       EQU     $83A        ;.L $000D8000 HIDE SCREEN POINTER HDSCRN     EQU     $83A        ;.L HIDE SCREEN, LETZTER BILDSCHIRM IDP4       EQU     $83E        ;.L $000D6C00 IDP5       EQU     $842        ;.L $00000A66 IDP6       EQU     $846        ;.L $00000A66 ATARI: ACIA-PARAMETER IDP7       EQU     $84A        ;.L $00000000 CHANGE SCREEN ->VIDSHFTER CHSCRN     EQU     $84A        ;.L CHANGE SCREEN <>0 -> VIDEOSHIFTER * LDNTID     EQU     $852        ;LDN->TID TABELLE SIOLDT     EQU     $852        ; 2 LABELS: LDNTID ODER SIOLDT NSCHAB     EQU     $88A        ;.L ZEIT DER NAECHSTEN EINPLANUNG *                               (ABSOLUTER ZEITPUNKT) NSCHRL     EQU     $88E        ;.L ZEIT BIS ZUR NAECHSTEN EINPLANUNG *                               (RELATIVE ZEITDAUER,NEGATIVER WERT) *                               AKTUELLE ZEIT = (NSCHAB+NSCHRL) CMDTBL     EQU     $8B8        ;.L ADR DER UNTERPROGRAMMTABELLE DES *                               BEDIENINTERPRETERS (SCHEIBE 11) FPUFLG     EQU     $8CE        ;.B FPU VORHANDEN=$FF,SONST $00 *V2.1* PROCES     EQU     $8CF        ;.B 68020 VORHANDEN=$FF,SONST $00 *V2.1* KEYANS     EQU     $8E6        ;.W 8 WORTE KEY ANSWER, STATUSMELDUNG *                                TASTATURPROZ DISEX      EQU     $906        ;DISPATCHER-EXIT (E-VI-4,6) *                               FEHLERHAFTER WERT IN E-VII-17 * * DMA/FDC/HDC * DSKDAT     EQU     $FF8604     ;.W #WD1772 DATA ACCESS DMASTA     EQU     $FF8606     ;.W DMA STATUS REGISTER DMACTL     EQU     $FF8606     ;.W DMA CONTROL REGISTER * DMAHIG     EQU     $FF8609     ;.B BASIS UND ZAEHLER BYTES DMAMID     EQU     $FF860B     ;.B ZU BESCHREIBEN LOW-MID-HIG DMALOW     EQU     $FF860D     ;.B * * #WD1772 FLOPPY REGISTER * FRSTAT     EQU     $0 FRCMD      EQU     $0 FRTRCK     EQU     $2 FRSECT     EQU     $4 FRDATA     EQU     $6 * * MASKENWERTE FUER DMA STATUS REGISTER * DMANOE     EQU     $0001      ;.W NO ERROR DMASCN     EQU     $0002      ;.W SECTOR COUNT DMAREQ     EQU     $0004      ;.W DATA REQUEST SIGNAL ZUSTAND * * MASKENWERTE FUER DMA CONTROL REGISTER * DMAACC     EQU     $0006      ;.W #WD1772 REGISTER ACCESS HDISK      EQU     $0008      ;.W DEVICE SELECTION FDC=0,HDC=1 FRSCNT     EQU     $0010      ;.W 0=FDC-REG,1=SEC COUNT REG DMADIS     EQU     $0040      ;.W 0=DMA ENABLE,1=NO DMA FLOPPY     EQU     $0080      ;.W DEVICE SELECTION FDC=1,HDC=1 FRWRIT     EQU     $0100      ;.W DMA 0=READ 1=WRITE * * PROGRAMMABLE SOUND CHIP YM-2149 * PSGPAR     EQU     $FF8800     ;.B READ: READ I/O PORT B PSGSEL     EQU     $FF8800     ;.B WRITE: SELECT PSG PSGPAW     EQU     $FF8802     ;.B WRITE: WRITE I/O PORT A PSGPBW     EQU     $FF8802     ;.B WRITE: WRITE I/O PORT B * * MASKENWERTE FUER PSG PORT A * MONITR     EQU     $0040       ;.B MONITOR-BUCHSE CENTRS     EQU     $0020       ;.B CENTRONICS STROBE RSDTR      EQU     $0010       ;.B RS-232 DTR RSRTS      EQU     $0008       ;.B RS-232 RTS DRIVE1     EQU     $0004       ;.B DRIVE SELECT FLOPPY 1 DRIVE0     EQU     $0002       ;.B DRIVE SELECT FLOPPY 0 SIDES      EQU     $0001       ;.B SIDE SELECT SIGNAL * DESEL      EQU     $0007       ;.B DESELECT DRIVE * * MASKENWERTE FUER PSG SELECT REGISTER * IOPA       EQU     $000E       ;.B IO PORT A (NUR AUSGABE) * * MULTI FUNCTION PERIPHAL MK68901 * MFPPAR     EQU     $FFFA01     ;.B PARALLEL PORT * * ACIA 6850 * ACICTL     EQU     $FFFC00     ;.B #ACIA1 CONTROL(WRITE) ACIST      EQU     $FFFC00     ;.B        STATUS (READ) ACIDAT     EQU     $FFFC02     ;.B        DATA ACIRD      EQU     $FFFC02     ;.B        DATA (READ) ACIWR      EQU     $FFFC02     ;.B        DATA (WRITE) * * * UNTERPROGRAMM - SPRUNGTABELLE DES BEDIENINTERPRETERS (E-VII-14) *  ZUGRIFF Z.B UEBER:    MOVE =$000008B8,A0 *                        JSR CMDCAL(A0) * CMDCAL     EQU        0        ;AUFRUF DES INTERPRETERS IOCMDC     EQU        4        ;I/O COMMAND PROCESSOR (DIR,FILES, *                               MKDIR) + PARAMETERS SUBTSK     EQU        8        ;SUBTASK (SON PROCESS) GENERATION DEVDEC     EQU       12        ;DEVICE/FILE DECODER BY (A2) TO (A3)+ WRNCMD     EQU       16        ;SYNTAXFEHLERAUSGANG ('WRONG COMMAND') DNTUS1     EQU       20        ;NICHT INNERHALB DER SHELL-TASK DNTUS2     EQU       24        ;NICHT INNERHALB DER SHELL-TASK TXTOUT     EQU       28        ;MAKE OUTPUT OF TEXT STORED BY (A5)+ *                               BEFORE SCNCHR     EQU       32        ;SCAN ON CLASS OF CHARACTERS BY (A2) WRTADR     EQU       36        ;WRITE ADDRESS IN A3 AS 6 HEX DIGITS *                               TO (A5)+ * * BEDEUTUNGEN IM PROCEDURE WORKSPACE (E-I-45) *  ADRESSIERUNG "PRTNAD.X" = "PRTNAD(A5)" * PRTNAD     EQU     -8          ;FORTSETZUNGSADRESSE ->RETN * * HIER ADRESSIERUNG UEBER "PRTNA2(A1)": PRTNA2     EQU     $1A         ;FORTSETZUNGSADRESSE ->RETN * * * BEDEUTUNGEN IM TASK HEADER (D-III-1) *  PERMANENT, WIRD ADRESSIERT UEBER TID *  Z.B.  MOVE.L BRKADR(TID),D0 * THBEG      EQU     $00         ;BEGINN TASK HEADER MHBEG      EQU     $00         ;BEGINN MODUL HEADER NEXTMT     EQU     $00         ;.L 0 OR ADR OF NEXT M/T HEAD LASTMT     EQU     $04         ;.L 0 OR ADR OF LAST M/T HEAD TASKTP     EQU     $08         ;.W M/T TYPE * $0001 TASK NORMAL, $0010 MODUL, $0041 AUTOSTART TASK , * $0081 TASK RESIDENT, $0090 PROMMED MODUL $00C1 RESIDENT AUTOSTART TASK TNAME      EQU     $0A         ;(6 BYTES) TASKNAME MHEND      EQU     $0F         ;LETZTES BYTES DES MODUL HEADERS * * BIS HIERHER GEHT MODULKOPF, DANACH NUR GUELTIG FUER TASKKOEPFE * TPRIO1     EQU     $10         ;.W DEFAULTTASKPRIO WSPLEN     EQU     $12         ;.L WORKSPACELAENGE DES TASK (>120) TPTR1      EQU     $16         ;.L ZEIGER FUER SYSTEMEIGENE ZWECKE TPTR2      EQU     $1A         ;.L   "     "      "           " TPRIO2     EQU     $1E         ;.W IST SPAETERE LAUFPRIO TSTART     EQU     $20         ;STARTADRESSE ADR. 1. ANWEISUNG TASK BLOCK      EQU     $24         ;.B !! BLOCK-BYTE ->BCHG CMDPTR     EQU     $28         ;.L POINTER AUF KOMMANDOZEILE, NUR *                               BEI SUBTASKGENERIERUNG MIT "GO" BRKADR     EQU     $3D         ;.L BREAKPOINT-ZEILENNR (ASCII) FPUCEL     EQU     $45         ;.B FPU-CELL,GIBT ZU RETTENDE REGS AN *V2.1* THEND      EQU     $63 * * BLOCK BYTE IM TASK HEADER * BLKBSU     EQU       4         ; SUSPEND-BIT-NO IN BLOCK BLKSCH     EQU       5         ; SCHEDULE-BIT-NO IN BLOCK BLKIO      EQU       6         ; I/O?-BIT-NO IN BLOCK * * * BEDEUTUNGEN IM TASK WORKSPACE *  FLUECHTIG, KANN MIT ATTRIBUT 'RESIDENT' NICHTFLUECHTIG GEMACHT *  WERDEN, BIS TASK ENTLADEN WIRD *  (MUSS MINDESTENS 120 = $78 BYTE FUER'S SYSTEM *  GROSS SEIN, DER SPEICHERBEREICH DANACH STEHT DEM USER *  ZUR VERFUEGUNG) *  ADRESSIERUNG "OPTNAME.T" = "OPTNAME(A4)" * REG        EQU     $16         ;HIER BEI TASKSUSPENDIERUNG REGISTER *                               ABGELEGT, SIEHE B-II-22 (DR) REGEND     EQU     $65         ;ENDE DES REGISTERBEREICHS OPNAME     EQU     $66         ;(6BYTES) TASKNAME,TASKADRESSE OPFATI     EQU     $6C         ;.L 1) PROZES-INTERRUPT-MASKE ->ACTEV *                                  2) STARTZEIT(AT,AFTER) *                                  3) TASKBLOCKIERUNG ->REQU,RELEA OPINTV     EQU     $70         ;.L ZEIT-INTERVALL(EINMALIG,WIEDERHOLT)<>$36 OPLTI      EQU     $74         ;.L ENDZEIT(AT,AFTER)<>$3A CELADR     EQU     $8C         ;.L ADR DES COM-ELEMENTS DES BEDIEN- *                               INTERPRETERS (SCHEIBE 11) *                                ! AUSSSERHALB DER MINDESTLAENGE ! LINENO     EQU     $A2         ;.L UEBERLAUFENE ZEILENNR IM CODE *                                ! AUSSSERHALB DER MINDESTLAENGE ! * * * TASTATURBELEGUNG *V2.1* *  OFFSET, UM TASTATURTABELLE ZU ERREICHEN *  ADRESSIERUNG "NORMAL(ADRESSREGISTER,MIT $081E GELADEN)" NORMAL     EQU     $1320 SHIFT      EQU     $13A0 CAPSLK     EQU     $1420 CONTRL     EQU     $14A0 ALTERN     EQU     $1520 * * * HYPERPROZESSOR *  OPCODES NICHT FUER NEUENTWICKLUNGEN ALS    ## *  NUR WENN FILEMANAGER (UH-FM) VORHANDEN ALS ** * ABSD       OPD.V   141 ;## ABSF       OPD.V   140 ;## ACTI       OPD.V    95 ; ACTIVATE WITH PRIORITY ADDD       OPD.V     3 ;## ADDF       OPD.V     2 ;## AFOL       OPD.V    45 ; A-FORMAT AFTR       OPD.V   102 ; AFTER (DURATION) SCHEDULE PARAM. SET ALLD       OPD.V   103 ; ALL (DURATION) SCHEDULE PARAM. SET APDN       OPD.V    51 ;** APPEND TO FILE ARBS       OPD.V   123 ; ARRAY-PARAM.XFER 'BITSTRING' ARCS       OPD.V   124 ; ARRAY-PARAM.XFER 'CHAR.STRING' ARNS       OPD.V   122 ; ARRAY-PARAM.XFER 'NO STRING' ATCL       OPD.V   101 ; AT (CLOCK) SCHEDULE PARAM.SET BFOR       OPD.V   125 ; B-FORMAT CALL       OPD.V    18 ; CALL PROCEDURE (IM COMP. ALS PROC) CATC       OPD.V    26 ; CONCATENATION VON 2 CHAR-STRINGS CDAT       OPD.V    92 ; CLOSE DATION (IF CLOSABLE) CONT       OPD.V    89 ; CONTINUE (GIVEN TASK) CSHL       OPD.V    53 ; CYCLIC SHIFT 17 TO 32 BIT CSHS       OPD.V    55 ; CYCLIC SHIFT  1 TO 16 BIT CVFD       OPD.V    25 ;## CVWD       OPD.V    23 ;## * CVWF       OPD.V   134 ;## CVXD       OPD.V    24 ;## CVXF       OPD.V    22 ;## DFOR       OPD.V   126 ; D-FORMAT DIVD       OPD.V     9 ;## DIVF       OPD.V   132 ;## DIVX       OPD.V     8 ;## DMYD       OPD.V   137 ; (DUMMY)-DATION PARAMETER XFER DMYI       OPD.V   138 ; (DUMMY)-INTERRUPT PARAMETER XFER DUDU       OPD.V   105 ; DURING (DURATION) SCHEDULE PARAM. SET EACL       OPD.V    40 ; E/A OF CLOCK EACS       OPD.V   113 ; E/A CHARACTER STRING EADU       OPD.V    39 ; E/A OF DURATION EALD       OPD.V    38 ; E/A OF FLOAT55 EALF       OPD.V    37 ; E/A OF FLOAT23 EALW       OPD.V    35 ; E/A OF FIXED15 EALX       OPD.V    36 ; E/A OF FIXED31 EFR2       OPD.V    30 ; E-FORMAT MIT 2 PARAMETERN EFR3       OPD.V    31 ; E-FORMAT MIT 3 PARAMETERN ENTI       OPD.V   142 ;## ENTR       OPD.V    29 ; PROZEDUREINTRITT MIT PWSP-ERZEUGUNG EOLI       OPD.V   111 ; END I/O-LIST (ESCAPE-LABEL) EORL       OPD.V    52 ; EOR WITH 32 BIT OBJ. EORW       OPD.V   133 ; EXCL.OR 32 BIT (FEHLT IN 68000 HARDW.) EPAR       OPD.V    19 ; END OF PARAMETERLIST EQBS       OPD.V   118 ; EQUAL BIT-STRINGS EQCS       OPD.V   119 ; EQUAL CHAR. STRINGS EQUD       OPD.V    63 ; EQUAL LONG FLOAT FACT       OPD.V    44 ; FORMAT WIEDERHOLUNGSFAKTOR FESP       OPD.V    43 ; FORMAT-END-SPECIFICATION FFOR       OPD.V   114 ; F-FORMAT GET        OPD.V    28 ; EROEFFNUNG EINER LISTE FUER GET * INVD       OPD.V    17 ; PARAM. XFER: KONSTANTE FLOAT 55 INVF       OPD.V    16 ; PARAM. XFER: KONSTANTE FLOAT 23 INVW       OPD.V    14 ; PARAM. XFER: KONSTANTE FIXED 15 INVX       OPD.V    15 ; PARAM. XFER: KONSTANTE FIXED 31 IOBS       OPD.V    54 ; I/O BIT-STRING LBRK       OPD.V    41 ; LEFT BRACKET IN FORMAT LDAD       OPD.V   135 ;## LIFO       OPD.V    46 ; LIST-FORMAT LIMV       OPD.V    90 ; LINE-MARKER IN VIRTUAL ENVIRONMENT LTHD       OPD.V    74 ;## LTHF       OPD.V    73 ;## LTST       OPD.V    72 ; LENGTH-TEST (STRUCT-PARAM XFER) MOVU       OPD.V     1 ;## MPXF       OPD.V   139 ; MISCELLANEOUS PARAMETER X-FER MULD       OPD.V     7 ;## MULF       OPD.V   131 ;## MULX       OPD.V     6 ;## MVBS       OPD.V   120 ; MOVE BIT-STRING MVCS       OPD.V   121 ; MOVE CHARACTER-STRING NEBS       OPD.V    59 ; NOT EQUAL FOR BIT-STRINGS NECS       OPD.V    60 ; NOT EQUAL CHARACTER-STRINGS ODAT       OPD.V    91 ; OPEN DATION (NO OPERATION) OPN3       OPD.V    48 ;** OPEN 3 PARAM. (BY IDF(..)) PAGE       OPD.V    32 ; PAGE-FORMAT * POWD       OPD.V    86 ; POWER FLOAT(55) POWF       OPD.V    85 ; POWER FLOAT(23) POWW       OPD.V    83 ; POWER FIXED(15) POWX       OPD.V    84 ; POWER FIXED(31) PREVT      OPD.V    88 ; PREVENT (GIVEN TASK)  !!!! STATT PREV !!!! PROC       OPD.V    18 ; CALL PROCEDURE PUT        OPD.V    27 ; EROEFFNUNG EINER LISTE FUER PUT RBRK       OPD.V    42 ; RIGHT BRACKET IN FORMAT READ       OPD.V   108 ; READ-INSTRUCTION RFEN       OPD.V   112 ; REMOTE-FORMAT END RLFO       OPD.V    34 ; REMOTE-LEFT-BRACKET IN FORMAT ROUN       OPD.V   143 ;## RWND       OPD.V    49 ;** REWIND DATION AND OPEN SAVP       OPD.V    57 ;** SAVE A POSITION IN A FILE SEEK       OPD.V    56 ;** SEEK A POSITION IN A FILE SHFL       OPD.V    21 ; SHIFT 17 TO 32 BIT OBJECT SHFS       OPD.V    20 ; SHIFT  1 TO 16 BIT OBJECT SIGN       OPD.V   144 ;## SKFO       OPD.V    47 ; SKIP-FORMAT STAD       OPD.V   136 ;## STSC       OPD.V   100 ; START SCHEDULE-DEFINITION SUBD       OPD.V     5 ;## SUBF       OPD.V     4 ;## SUSE       OPD.V    64 ; SUSPEND EXTERNAL (GIVEN TASK) SYNC       OPD.V    50 ;** SYNCHRONIZE DATION TACT       OPD.V    97 ; (TIMED).. ACTIVATE WITH PRIORITY TCON       OPD.V    94 ; (TIMED).. CONTINUE TERM       OPD.V    87 ; TERMINATE (GIVEN TASK) TFOR       OPD.V   127 ; T-FORMAT TOREAL     OPD.V     0 ; ABSCHALTEN DES HYPERPROZESSORS TRES       OPD.V    99 ; (TIMED).. RESUME (OWN TASK) UNIL       OPD.V   104 ; UNTIL (CLOCK) SCHEDULE PARAM. SET VARD       OPD.V    13 ; PARAM. XFER: VARIABLE FLOAT 55 VARF       OPD.V    12 ; PARAM. XFER: VARIABLE FLOAT 23 VARW       OPD.V    10 ; PARAM. XFER: VARIABLE FIXED 15 VARX       OPD.V    11 ; PARAM. XFER: VARIABLE FIXED 31 * WACT       OPD.V    96 ; (WHEN).. ACTIVATE WITH PRIORITY WCON       OPD.V    93 ; (WHEN).. CONTINUE WHEV       OPD.V   106 ; WHEN (EVENT) SCHEDULE PARAM. SET WRES       OPD.V    98 ; (WHEN).. RESUME (OWN TASK) WRIT       OPD.V   107 ; WRITE-INSTRUCTION XFOR       OPD.V    33 ; X-FORMAT * * * (ATARI ST SPEZIFISCHE) INTERRUPTS * RS232      EQU     $20000000   ;IRQ PIN22 RS232 SCHNITTSTELLE SYNC       EQU     $40000000   ;IRQ VERTIKALER BILDRUECKLAUF * MAUS       EQU     $80000000   ;IRQ STATUSMELDUNG TASTATURPROZESSOR KBD        EQU     $80000000   ; NORMALE TASTENDRUECKE AUF TASTATUR JOYST      EQU     $80000000   ; WERDEN !NICHT! DURCHGEREICHT KBDPRZ     EQU     $80000000 * * * USER-APPLICABLE TRAPS FOR SPECIAL IMPLEMENTATIONS *  $A080..$A0FE IN 2 BYTE SCHRITTEN, *  TRANSFER ADRESSEN = (LINKES BYTE * 2) + $0400 *  BEMERKUNG E-I-2: SYSTEM-STACK WAECHST VON $800 NACH UNTEN *  KANN LINKS ZERSTOEREN * *  NAMEN BEI BEDARF AENDERN ! * USR80      OPD     $A080       ; TRANSFER-ADRESSE AUF $0500 USR82      OPD     $A082       ;                      $0504 USR84      OPD     $A084 USR86      OPD     $A086 USR88      OPD     $A088 USR8A      OPD     $A08A USR8C      OPD     $A08C USR8E      OPD     $A08E * USR90      OPD     $A090 USR92      OPD     $A092 USR94      OPD     $A094 USR96      OPD     $A096 USR98      OPD     $A098 USR9A      OPD     $A09A USR9C      OPD     $A09C USR9E      OPD     $A09E * USRA0      OPD     $A0A0 USRA2      OPD     $A0A2 USRA4      OPD     $A0A4 USRA6      OPD     $A0A6 USRA8      OPD     $A0A8 USRAA      OPD     $A0AA USRAC      OPD     $A0AC USRAE      OPD     $A0AE * USRB0      OPD     $A0B0 USRB2      OPD     $A0B2 USRB4      OPD     $A0B4 USRB6      OPD     $A0B6 USRB8      OPD     $A0B8 USRBA      OPD     $A0BA USRBC      OPD     $A0BC USRBE      OPD     $A0BE * USRC0      OPD     $A0C0 USRC2      OPD     $A0C2 USRC4      OPD     $A0C4 USRC6      OPD     $A0C6 USRC8      OPD     $A0C8 USRCA      OPD     $A0CA USRCC      OPD     $A0CC USRCE      OPD     $A0CE * USRD0      OPD     $A0D0 USRD2      OPD     $A0D2 USRD4      OPD     $A0D4 USRD6      OPD     $A0D6 USRD8      OPD     $A0D8 USRDA      OPD     $A0DA USRDC      OPD     $A0DC USRDE      OPD     $A0DE * USRE0      OPD     $A0E0 USRE2      OPD     $A0E2 USRE4      OPD     $A0E4 USRE6      OPD     $A0E6 USRE8      OPD     $A0E8 USREA      OPD     $A0EA USREC      OPD     $A0EC USREE      OPD     $A0EE * USRF0      OPD     $A0F0 USRF2      OPD     $A0F2 USRF4      OPD     $A0F4 USRF6      OPD     $A0F6 USRF8      OPD     $A0F8 USRFA      OPD     $A0FA USRFC      OPD     $A0FC USRFE      OPD     $A0FE       ; TRANSFER-ADRESSE AUF $05FC * *            PAGE * *  REGISTER - VERFUEGBARKEIT * *    MC68000 REGISTER *    D0,D1,D2,D3,D4,D5,D6,D7, A0,A1,A2,A3,A4,A5,A6,A7 * *    A4,A5,A6,A7 DUERFEN IM LAUFE EINES UP NICHT VERAENDERT WERDEN. *    A7 IST MIT MAXIMAL 2 BSR-LEVEL ( 8 BYTES ) BELASTBAR, ES MUSS *    BEIM UP-AUSTRITT ODER VOR BENUTZUNG VIRTUELLER BEFEHLE WIEDER *    AUF DEM EINGANGSWERT STEHEN. * *    D1,D6,D7,A1 WERDEN BEI VERWENDUNG VON LITRA,LITRAV VERAENDERT. *    D0,D1,D5,D6,D7,A1,A2 WERDEN VON VERSCHIEDENEN SYSTEM TRAPS *    VERAENDERT (SIE WERDEN U.U AUCH ALS EIN/AUSGABE REGISTER VERWENDET) * *    (D0,D1,D2,D3,D4,D5,D6,D7,A0,A1,A2,A3) -> WENN KEIN SYSTEM TRAP *    (D0,D2,D3,D4,D5,A0,A2,A3) -> WENN KEIN SYSTEM TRAP AUSSSER LITRA *    (D2,D3,D4,A0,A3)          -> VERFUEGBAR AUCH NACH SYSTEM TRAP * *    A0    ZEIGT AUF BEGINN DES PARAMETERLINKS (DARF ZERSTOERT WERDEN) *    A4    ZEIGT AUF TASK WORK SPACE .T *    A5    ZEIGT AUF PROCEDURE WORK SPACE .X  (NACH ENTR WSPSZ.L) *    D6    ENTHAELT NACH BREAK DIE LINE-NUMBER ALS ASCII-STRING *   (D2)   ENTHAELT BEI PROZEDURSTART DAS REGISTER A5 (= 'WL')*          DES AUFRUFERS*            PAGE * * END OF INCLUDE FILE * * * 